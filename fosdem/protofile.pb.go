// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protofile.proto

/*
Package shop is a generated protocol buffer package.

It is generated from these files:
	protofile.proto

It has these top-level messages:
	CatToy
	GetCatToyRequest
*/
package shop

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CatToy struct {
	Id    string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Price uint32 `protobuf:"varint,3,opt,name=price" json:"price,omitempty"`
}

func (m *CatToy) Reset()                    { *m = CatToy{} }
func (m *CatToy) String() string            { return proto.CompactTextString(m) }
func (*CatToy) ProtoMessage()               {}
func (*CatToy) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CatToy) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CatToy) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CatToy) GetPrice() uint32 {
	if m != nil {
		return m.Price
	}
	return 0
}

type GetCatToyRequest struct {
	ToyId string `protobuf:"bytes,1,opt,name=toy_id,json=toyId" json:"toy_id,omitempty"`
}

func (m *GetCatToyRequest) Reset()                    { *m = GetCatToyRequest{} }
func (m *GetCatToyRequest) String() string            { return proto.CompactTextString(m) }
func (*GetCatToyRequest) ProtoMessage()               {}
func (*GetCatToyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GetCatToyRequest) GetToyId() string {
	if m != nil {
		return m.ToyId
	}
	return ""
}

func init() {
	proto.RegisterType((*CatToy)(nil), "shop.CatToy")
	proto.RegisterType((*GetCatToyRequest)(nil), "shop.GetCatToyRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for CatServer service

type CatServerClient interface {
	GetCatToy(ctx context.Context, in *GetCatToyRequest, opts ...grpc.CallOption) (*CatToy, error)
}

type catServerClient struct {
	cc *grpc.ClientConn
}

func NewCatServerClient(cc *grpc.ClientConn) CatServerClient {
	return &catServerClient{cc}
}

func (c *catServerClient) GetCatToy(ctx context.Context, in *GetCatToyRequest, opts ...grpc.CallOption) (*CatToy, error) {
	out := new(CatToy)
	err := grpc.Invoke(ctx, "/shop.CatServer/GetCatToy", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for CatServer service

type CatServerServer interface {
	GetCatToy(context.Context, *GetCatToyRequest) (*CatToy, error)
}

func RegisterCatServerServer(s *grpc.Server, srv CatServerServer) {
	s.RegisterService(&_CatServer_serviceDesc, srv)
}

func _CatServer_GetCatToy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCatToyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CatServerServer).GetCatToy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shop.CatServer/GetCatToy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CatServerServer).GetCatToy(ctx, req.(*GetCatToyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CatServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "shop.CatServer",
	HandlerType: (*CatServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetCatToy",
			Handler:    _CatServer_GetCatToy_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protofile.proto",
}

func init() { proto.RegisterFile("protofile.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 208 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2f, 0x28, 0xca, 0x2f,
	0xc9, 0x4f, 0xcb, 0xcc, 0x49, 0xd5, 0x03, 0xb3, 0x84, 0x58, 0x8a, 0x33, 0xf2, 0x0b, 0x94, 0x9c,
	0xb8, 0xd8, 0x9c, 0x13, 0x4b, 0x42, 0xf2, 0x2b, 0x85, 0xf8, 0xb8, 0x98, 0x32, 0x53, 0x24, 0x18,
	0x15, 0x18, 0x35, 0x38, 0x83, 0x98, 0x32, 0x53, 0x84, 0x84, 0xb8, 0x58, 0xf2, 0x12, 0x73, 0x53,
	0x25, 0x98, 0xc0, 0x22, 0x60, 0xb6, 0x90, 0x08, 0x17, 0x6b, 0x41, 0x51, 0x66, 0x72, 0xaa, 0x04,
	0xb3, 0x02, 0xa3, 0x06, 0x6f, 0x10, 0x84, 0xa3, 0xa4, 0xc9, 0x25, 0xe0, 0x9e, 0x5a, 0x02, 0x31,
	0x26, 0x28, 0xb5, 0xb0, 0x34, 0xb5, 0xb8, 0x44, 0x48, 0x94, 0x8b, 0xad, 0x24, 0xbf, 0x32, 0x1e,
	0x6e, 0x22, 0x6b, 0x49, 0x7e, 0xa5, 0x67, 0x8a, 0x91, 0x03, 0x17, 0xa7, 0x73, 0x62, 0x49, 0x70,
	0x6a, 0x51, 0x59, 0x6a, 0x91, 0x90, 0x31, 0x17, 0x27, 0x5c, 0x9f, 0x90, 0x98, 0x1e, 0xc8, 0x3d,
	0x7a, 0xe8, 0x06, 0x49, 0xf1, 0x40, 0xc4, 0x21, 0x82, 0x4a, 0x0c, 0x4e, 0xaa, 0x51, 0xca, 0xe9,
	0x99, 0x25, 0x19, 0xa5, 0x49, 0x7a, 0xc9, 0xf9, 0xb9, 0xfa, 0xc9, 0x89, 0x25, 0xba, 0x89, 0xc5,
	0x25, 0x45, 0xf9, 0x05, 0x19, 0x99, 0xc9, 0xfa, 0x60, 0x8f, 0xe9, 0x83, 0xd4, 0x27, 0xb1, 0x81,
	0xd9, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x98, 0xd2, 0x33, 0x1d, 0xf7, 0x00, 0x00, 0x00,
}
